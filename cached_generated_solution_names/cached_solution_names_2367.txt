 -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 -> Rotate 90 -> Rotate 270
 -> Rotate 90
 -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 -> Translate (-453329/1239810,-59737/112710)
 -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 -> Rotate 90 -> Rotate 180
 -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate 90
 -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate 90
 -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 -> Rotate 90
 -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Translate (-14273/37570,-59737/112710)
 -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 -> Rotate 90 -> Rotate 180
 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 -> Translate (-43261/112710,-59737/112710)
 -> Rotate 90 -> Rotate 180
 -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Rotate 90
 -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 -> Translate (-43261/112710,-59737/112710)
 -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 ->  ->  ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate 90 -> Rotate 180
 -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 ->  ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate 90 -> Rotate 90 -> Rotate 180
 -> Translate (-14613/37570,-59737/112710)
 -> Rotate 90 -> Rotate 180
 -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 ->  -> Very small square -> Translate (-3385/7514,-14653/112710)
 -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate 90
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 ->  ->  -> Very small square -> Translate (-3385/7514,-14653/112710) -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Translate (-14613/37570,-59737/112710)
 -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 -> Rotate 90 -> Rotate 180
 -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 -> Rotate 90
 -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 -> Translate (-163633/413270,-59737/112710)
 -> Rotate 90 -> Rotate 180
 -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 -> Translate (-137297/338130,-59737/112710)
 -> Rotate 90 -> Rotate 180
 -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 ->  -> Task 3 -> Translate (-364651/450840,-220163/450840)
 -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate 90
 -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Translate (-137297/338130,-59737/112710)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 ->  ->  ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 ->  -> Task 0 -> Translate (-31953/37570,-59737/112710)
 ->  ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate 90 -> Rotate 90 -> Rotate 180
 -> Rotate 90 -> Rotate 180
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate 90
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 -> Translate (-110961/262990,-59737/112710)
 -> Rotate 90 -> Rotate 180
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 ->  -> Square -> Translate (-31953/37570,-59737/112710)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate 90
 ->  ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 -> Translate (-110961/262990,-59737/112710)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 ->  ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 ->  ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate 90 -> Rotate 90 -> Rotate 180
 -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 ->  ->  ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 -> Translate (-779291835057685507/887453426925415350,-40164088816584793/161355168531893700)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate 90
 -> Rotate 90 -> Rotate 180
 ->  ->  ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 ->  ->  -> Square -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 ->  ->  ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 -> Rotate 90 -> Rotate 270
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 ->  -> Task 2 -> Translate (-325147/338130,-141641/338130)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 ->  ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate 90 -> Rotate 90 -> Rotate 180
 -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710)
 ->  ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate 90 -> Rotate 90 -> Rotate 180
 -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate 90
 ->  ->  ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 -> Translate (-3385/7514,-59737/112710)
 -> Rotate 90 -> Rotate 180
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate 90 -> Rotate 180
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate 90
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate 90
 ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate 90
 -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 ->  ->  -> Task 3 -> Translate (-364651/450840,-220163/450840) -> Rotate 90
 ->  ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840)
 ->  ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  -> Task 1 -> Translate (-38537/56355,-13087/18785)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 ->  ->  ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 ->  ->  ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 ->  ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 ->  -> Triangle -> Translate (-82691/75140,-63119/225420)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 ->  ->  -> 3/4 square -> Translate (-172933/225420,-33563/75140) -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 ->  ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(33, 56, 65)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(8, 15, 17)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(84, 13, 85)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(28, 45, 53)>)
 ->  ->  ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(60, 11, 61)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 ->  ->  -> Cool last phigure -> Translate (-80831/112710,-29681/112710) -> Rotate 90
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(39, 80, 89)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(63, 16, 65)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(3, 4, 5)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 -> Rotate(-6584/18785,-1691/56355, <(36, 77, 85)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 -> Rotate 90
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(24, 7, 25)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 ->  ->  -> Task 1 -> Translate (-38537/56355,-13087/18785) -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 ->  ->  -> Triangle -> Translate (-82691/75140,-63119/225420) -> Rotate(-6584/18785,-1691/56355, <(12, 5, 13)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(48, 55, 73)>)
 -> Rotate(-6584/18785,-1691/56355, <(5, 12, 13)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(77, 36, 85)>)
 ->  ->  -> Task 2 -> Translate (-325147/338130,-141641/338130) -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(80, 39, 89)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(65, 72, 97)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(15, 8, 17)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate 90
 ->  ->  ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Task 0 -> Translate (-31953/37570,-59737/112710) -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 ->  ->  -> Square F4Parts -> Translate (-58289/112710,-7389/37570) -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(20, 21, 29)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(56, 33, 65)>)
 -> Rotate(-6584/18785,-1691/56355, <(13, 84, 85)>)
 -> Rotate(-6584/18785,-1691/56355, <(11, 60, 61)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(45, 28, 53)>)
 -> Rotate(-6584/18785,-1691/56355, <(7, 24, 25)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(21, 20, 29)>)
 -> Rotate(-6584/18785,-1691/56355, <(16, 63, 65)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(72, 65, 97)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(55, 48, 73)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-146597/150280,-182593/450840) -> Rotate(-6584/18785,-1691/56355, <(4, 3, 5)>)
