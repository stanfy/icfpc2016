 -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate(1/10,11/20, <(39, 80, 89)>)
 -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate(1/10,11/20, <(20, 21, 29)>)
 -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(55, 48, 73)>)
 -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate(1/10,11/20, <(56, 33, 65)>)
 -> Rotate(1/10,11/20, <(39, 80, 89)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(39, 80, 89)>)
 -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(15, 8, 17)>)
 -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(39, 80, 89)>)
 -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(80, 39, 89)>)
 -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate(1/10,11/20, <(39, 80, 89)>)
 -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Rotate(1/10,11/20, <(77, 36, 85)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(20, 21, 29)>)
 -> Rotate(1/10,11/20, <(39, 80, 89)>)
 -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Rotate(1/10,11/20, <(20, 21, 29)>)
 -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Rotate(1/10,11/20, <(39, 80, 89)>)
 -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(12, 5, 13)>)
 -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(55, 48, 73)>)
 -> Rotate(1/10,11/20, <(20, 21, 29)>)
 -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(55, 48, 73)>)
 -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(20, 21, 29)>)
 -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate(1/10,11/20, <(55, 48, 73)>)
 -> Rotate(1/10,11/20, <(39, 80, 89)>)
 -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(20, 21, 29)>)
 -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(55, 48, 73)>)
 -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(39, 80, 89)>)
 -> Rotate(1/10,11/20, <(20, 21, 29)>)
 -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(55, 48, 73)>)
 -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(56, 33, 65)>)
 -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(39, 80, 89)>)
 -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(24, 7, 25)>)
 -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(55, 48, 73)>)
 -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate(1/10,11/20, <(56, 33, 65)>)
 -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Rotate(1/10,11/20, <(20, 21, 29)>)
 -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(15, 8, 17)>)
 -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(39, 80, 89)>)
 -> Rotate(1/10,11/20, <(56, 33, 65)>)
 -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(15, 8, 17)>)
 -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Rotate(1/10,11/20, <(20, 21, 29)>)
 -> Rotate(1/10,11/20, <(63, 16, 65)>)
 -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(80, 39, 89)>)
 -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Rotate(1/10,11/20, <(56, 33, 65)>)
 -> Rotate(1/10,11/20, <(55, 48, 73)>)
 -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(15, 8, 17)>)
 -> Rotate(1/10,11/20, <(77, 36, 85)>)
 -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(39, 80, 89)>)
 -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate(1/10,11/20, <(80, 39, 89)>)
 -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(56, 33, 65)>)
 -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(20, 21, 29)>)
 -> Rotate(1/10,11/20, <(77, 36, 85)>)
 -> Rotate(1/10,11/20, <(15, 8, 17)>)
 -> Rotate(1/10,11/20, <(55, 48, 73)>)
 -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Rotate(1/10,11/20, <(80, 39, 89)>)
 -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Rotate(1/10,11/20, <(12, 5, 13)>)
 -> Rotate(1/10,11/20, <(56, 33, 65)>)
 -> Rotate(1/10,11/20, <(77, 36, 85)>)
 -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate(1/10,11/20, <(15, 8, 17)>)
 -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(80, 39, 89)>)
 -> Rotate(1/10,11/20, <(20, 21, 29)>)
 -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(55, 48, 73)>)
 ->  -> Task 0 -> Translate (-2/5,1/20)
 ->  ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate 90 -> Rotate 90 -> Rotate 180
 -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate(1/10,11/20, <(12, 5, 13)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(60, 11, 61)>)
 -> Rotate(1/10,11/20, <(60, 11, 61)>)
 -> Rotate(1/10,11/20, <(77, 36, 85)>)
 -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(63, 16, 65)>)
 -> Rotate(1/10,11/20, <(84, 13, 85)>)
 -> Rotate(1/10,11/20, <(21, 20, 29)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(24, 7, 25)>)
 -> Rotate(1/10,11/20, <(80, 39, 89)>)
 -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Translate (14/165,1/20)
 -> Rotate 90 -> Rotate 180
 -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(12, 5, 13)>)
 -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(12, 5, 13)>)
 -> Rotate(1/10,11/20, <(55, 48, 73)>)
 -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate(1/10,11/20, <(20, 21, 29)>)
 -> Rotate(1/10,11/20, <(56, 33, 65)>)
 -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(80, 39, 89)>)
 -> Rotate(1/10,11/20, <(12, 5, 13)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(15, 8, 17)>)
 -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(77, 36, 85)>)
 -> Rotate(1/10,11/20, <(21, 20, 29)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(56, 33, 65)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(15, 8, 17)>)
 -> Rotate(1/10,11/20, <(56, 33, 65)>)
 -> Rotate(1/10,11/20, <(12, 5, 13)>)
 -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate(1/10,11/20, <(55, 48, 73)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(56, 33, 65)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(12, 5, 13)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(45, 28, 53)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(4, 3, 5)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(5, 12, 13)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(4, 3, 5)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(12, 5, 13)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(36, 77, 85)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(39, 80, 89)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(7, 24, 25)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(8, 15, 17)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(28, 45, 53)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(45, 28, 53)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(33, 56, 65)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(16, 63, 65)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(56, 33, 65)>)
 -> Rotate(1/10,11/20, <(12, 5, 13)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(3, 4, 5)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(4, 3, 5)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(48, 55, 73)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(55, 48, 73)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(20, 21, 29)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(21, 20, 29)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(65, 72, 97)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(80, 39, 89)>)
 -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(11, 60, 61)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(55, 48, 73)>)
 -> Rotate(1/10,11/20, <(56, 33, 65)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(13, 84, 85)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(72, 65, 97)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(24, 7, 25)>)
 -> Rotate(1/10,11/20, <(77, 36, 85)>)
 -> Rotate(1/10,11/20, <(4, 3, 5)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(55, 48, 73)>)
 -> Translate (-858599091192946/2007813183089175,120866314590521/365056942379850)
 -> Rotate 90 -> Rotate 180
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(72, 65, 97)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(20, 21, 29)>)
 -> Rotate(1/10,11/20, <(45, 28, 53)>)
 ->  -> Square -> Translate (-2/5,1/20)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate 90
 ->  ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate 90
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(65, 72, 97)>)
 ->  ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  -> Task 3 -> Translate (-43/120,11/120)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(13, 84, 85)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  ->  ->  -> Task 3 -> Translate (-43/120,11/120) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(11, 60, 61)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  -> Kolbaska diagonal -> Translate (-21/40,7/40)
 ->  ->  ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate 90
 ->  ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(16, 63, 65)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(63, 16, 65)>)
 -> Rotate(1/10,11/20, <(56, 33, 65)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(7, 24, 25)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(24, 7, 25)>)
 -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  -> Task 2 -> Translate (-23/45,29/180)
 ->  ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate 90
 -> Rotate(1/10,11/20, <(12, 5, 13)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(3, 4, 5)>)
 ->  -> Cool last phigure -> Translate (-4/15,19/60)
 -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(20, 21, 29)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(5, 12, 13)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(12, 5, 13)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(13, 84, 85)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(11, 60, 61)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(16, 63, 65)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(36, 77, 85)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  -> Very small square -> Translate (0,9/20)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate 90
 ->  ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(39, 80, 89)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(24, 7, 25)>)
 -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(7, 24, 25)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(8, 15, 17)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(15, 8, 17)>)
 -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(33, 56, 65)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(56, 33, 65)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(5, 12, 13)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(12, 5, 13)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(36, 77, 85)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(33, 56, 65)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(65, 72, 97)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(72, 65, 97)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(8, 15, 17)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(39, 80, 89)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(28, 45, 53)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(48, 55, 73)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(56, 33, 65)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(4, 3, 5)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(55, 48, 73)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(3, 4, 5)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(45, 28, 53)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(20, 21, 29)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(28, 45, 53)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(45, 28, 53)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(65, 72, 97)>)
 ->  ->  -> Very small square -> Translate (0,9/20) -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(13, 84, 85)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(65, 72, 97)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(3, 4, 5)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(4, 3, 5)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(48, 55, 73)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(55, 48, 73)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(20, 21, 29)>)
 ->  ->  -> Square -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(21, 20, 29)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(28, 45, 53)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(48, 55, 73)>)
 -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Rotate(1/10,11/20, <(77, 36, 85)>)
 -> Rotate(1/10,11/20, <(63, 16, 65)>)
 -> Rotate(1/10,11/20, <(56, 33, 65)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(12, 5, 13)>)
 -> Rotate(1/10,11/20, <(63, 16, 65)>)
 -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(16, 63, 65)>)
 ->  -> Task 1 -> Translate (-7/30,-7/60)
 ->  ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate 90
 ->  ->  ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(39, 80, 89)>)
 ->  -> 3/4 square -> Translate (-19/60,2/15)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate 90
 ->  ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(36, 77, 85)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(13, 84, 85)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(7, 24, 25)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(11, 60, 61)>)
 -> Rotate(1/10,11/20, <(12, 5, 13)>)
 ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate 90
 ->  ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(21, 20, 29)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(20, 21, 29)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(48, 55, 73)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(55, 48, 73)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(77, 36, 85)>)
 -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(7, 24, 25)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(13, 84, 85)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(84, 13, 85)>)
 -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(56, 33, 65)>)
 -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(4, 3, 5)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(3, 4, 5)>)
 -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(12, 5, 13)>)
 -> Rotate(1/10,11/20, <(4, 3, 5)>)
 ->  -> Triangle -> Translate (-13/20,3/10)
 ->  ->  ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate 90
 ->  ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(11, 60, 61)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(16, 63, 65)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(12, 5, 13)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(5, 12, 13)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(24, 7, 25)>)
 -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(11, 60, 61)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(28, 45, 53)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(55, 48, 73)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(36, 77, 85)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(33, 56, 65)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(56, 33, 65)>)
 -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(16, 63, 65)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  -> Square F4Parts -> Translate (-1/15,23/60)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate 90
 ->  ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate 90 -> Rotate 90 -> Rotate 180
 ->  ->  ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 -> Rotate(1/10,11/20, <(72, 65, 97)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(39, 80, 89)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(11, 60, 61)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(7, 24, 25)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(5, 12, 13)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(12, 5, 13)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(13, 84, 85)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(8, 15, 17)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(15, 8, 17)>)
 -> Rotate(1/10,11/20, <(21, 20, 29)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate(1/10,11/20, <(13, 84, 85)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(11, 60, 61)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(60, 11, 61)>)
 -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(8, 15, 17)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(13, 84, 85)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(39, 80, 89)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(13, 84, 85)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(16, 63, 65)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(77, 36, 85)>)
 -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(12, 5, 13)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(11, 60, 61)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(7, 24, 25)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(5, 12, 13)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(12, 5, 13)>)
 -> Rotate(1/10,11/20, <(20, 21, 29)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(36, 77, 85)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(56, 33, 65)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(33, 56, 65)>)
 -> Translate (6/85,1/20)
 -> Rotate 90 -> Rotate 180
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(39, 80, 89)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(11, 60, 61)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(36, 77, 85)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(16, 63, 65)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(8, 15, 17)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(63, 16, 65)>)
 -> Rotate(1/10,11/20, <(12, 5, 13)>)
 -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Triangle -> Translate (-13/20,3/10) -> Rotate(1/10,11/20, <(7, 24, 25)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(33, 56, 65)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(56, 33, 65)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(28, 45, 53)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(45, 28, 53)>)
 ->  ->  ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(28, 45, 53)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(45, 28, 53)>)
 ->  ->  -> Cool last phigure -> Translate (-4/15,19/60) -> Rotate 90
 -> Rotate(1/10,11/20, <(65, 72, 97)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(39, 80, 89)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(72, 65, 97)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(65, 72, 97)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(16, 63, 65)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(4, 3, 5)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(3, 4, 5)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(20, 21, 29)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(21, 20, 29)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(48, 55, 73)>)
 ->  ->  -> Two diagonals 0,1 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(55, 48, 73)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Rotate(1/10,11/20, <(48, 55, 73)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(5, 12, 13)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(12, 5, 13)>)
 -> Rotate(1/10,11/20, <(63, 16, 65)>)
 -> Rotate(1/10,11/20, <(84, 13, 85)>)
 -> Rotate(1/10,11/20, <(60, 11, 61)>)
 -> Translate (1/15,1/20)
 -> Rotate 90 -> Rotate 180
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(8, 15, 17)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(36, 77, 85)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(39, 80, 89)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(80, 39, 89)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(16, 63, 65)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(4, 3, 5)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(3, 4, 5)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(33, 56, 65)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(8, 15, 17)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(55, 48, 73)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(48, 55, 73)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(24, 7, 25)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(7, 24, 25)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(33, 56, 65)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(56, 33, 65)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(72, 65, 97)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(65, 72, 97)>)
 -> Rotate(1/10,11/20, <(84, 13, 85)>)
 -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(33, 56, 65)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(56, 33, 65)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(20, 21, 29)>)
 ->  ->  -> 3/4 square -> Translate (-19/60,2/15) -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(3, 4, 5)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(28, 45, 53)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Translate (1/15,1/20)
 -> Rotate 90 -> Rotate 180
 -> Rotate(1/10,11/20, <(12, 5, 13)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(28, 45, 53)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(45, 28, 53)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(3, 4, 5)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate(1/10,11/20, <(24, 7, 25)>)
 -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(48, 55, 73)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(55, 48, 73)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(65, 72, 97)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate 90
 -> Rotate 90 -> Rotate 270
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(20, 21, 29)>)
 ->  ->  -> Square F4Parts -> Translate (-1/15,23/60) -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(28, 45, 53)>)
 -> Translate (4/65,1/20)
 -> Rotate 90 -> Rotate 180
 -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(5, 12, 13)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(12, 5, 13)>)
 -> Rotate(1/10,11/20, <(33, 56, 65)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(3, 4, 5)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate(1/10,11/20, <(84, 13, 85)>)
 -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(77, 36, 85)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(36, 77, 85)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(48, 55, 73)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(55, 48, 73)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(65, 72, 97)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(11, 60, 61)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(39, 80, 89)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(20, 21, 29)>)
 ->  ->  -> Task 2 -> Translate (-23/45,29/180) -> Rotate(1/10,11/20, <(21, 20, 29)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(39, 80, 89)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(80, 39, 89)>)
 -> Rotate(1/10,11/20, <(24, 7, 25)>)
 -> Translate (4/65,1/20)
 -> Rotate 90 -> Rotate 180
 -> Rotate(1/10,11/20, <(39, 80, 89)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(5, 12, 13)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(12, 5, 13)>)
 -> Rotate(1/10,11/20, <(16, 63, 65)>)
 -> Rotate(1/10,11/20, <(63, 16, 65)>)
 -> Rotate(1/10,11/20, <(36, 77, 85)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(36, 77, 85)>)
 -> Rotate(1/10,11/20, <(7, 24, 25)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(8, 15, 17)>)
 -> Rotate(1/10,11/20, <(5, 12, 13)>)
 -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(33, 56, 65)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(56, 33, 65)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(36, 77, 85)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(77, 36, 85)>)
 -> Rotate(1/10,11/20, <(24, 7, 25)>)
 -> Translate (3/55,1/20)
 -> Rotate 90 -> Rotate 180
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(28, 45, 53)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(45, 28, 53)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(5, 12, 13)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(39, 80, 89)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(80, 39, 89)>)
 -> Rotate(1/10,11/20, <(63, 16, 65)>)
 -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(8, 15, 17)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(15, 8, 17)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(3, 4, 5)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(4, 3, 5)>)
 -> Rotate(1/10,11/20, <(24, 7, 25)>)
 -> Rotate(1/10,11/20, <(63, 16, 65)>)
 -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(48, 55, 73)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(55, 48, 73)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(65, 72, 97)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(72, 65, 97)>)
 -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(20, 21, 29)>)
 ->  ->  -> Task 1 -> Translate (-7/30,-7/60) -> Rotate(1/10,11/20, <(21, 20, 29)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(33, 56, 65)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(56, 33, 65)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(28, 45, 53)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(45, 28, 53)>)
 -> Rotate(1/10,11/20, <(63, 16, 65)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(7, 24, 25)>)
 -> Rotate(1/10,11/20, <(84, 13, 85)>)
 -> Translate (2/45,1/20)
 -> Rotate 90 -> Rotate 180
 -> Rotate(1/10,11/20, <(60, 11, 61)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(4, 3, 5)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(3, 4, 5)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(48, 55, 73)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(55, 48, 73)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(16, 63, 65)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(65, 72, 97)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(72, 65, 97)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(20, 21, 29)>)
 ->  ->  -> Kolbaska diagonal -> Translate (-21/40,7/40) -> Rotate(1/10,11/20, <(21, 20, 29)>)
 -> Rotate(1/10,11/20, <(60, 11, 61)>)
 -> Rotate(1/10,11/20, <(84, 13, 85)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(11, 60, 61)>)
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate 90
 ->  ->  ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate 90 -> Rotate 90 -> Rotate 90 -> Rotate 270
 -> Translate (2/45,1/20)
 -> Rotate 90 -> Rotate 180
 ->  ->  -> Task 0 -> Translate (-2/5,1/20) -> Rotate(1/10,11/20, <(13, 84, 85)>)
 -> Rotate(1/10,11/20, <(84, 13, 85)>)
 -> Rotate(1/10,11/20, <(60, 11, 61)>)
 -> Rotate(1/10,11/20, <(84, 13, 85)>)
 -> Translate (1/35,1/20)
 -> Rotate 90 -> Rotate 180
 -> Translate (1/35,1/20)
 -> Rotate 90 -> Rotate 180
 -> Translate (0,1/20)
 -> Rotate 90 -> Rotate 180
